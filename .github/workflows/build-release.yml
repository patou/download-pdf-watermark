name: Build and Release Plugin

on:
  push:
    tags:
      - 'v*'
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, intl, zip
        tools: composer:v2
        
    - name: Validate composer.json and composer.lock
      run: composer validate --strict
      
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
          
    - name: Install Composer dependencies
      run: composer install --no-dev --optimize-autoloader --no-interaction
      
    - name: Create plugin directory
      run: mkdir -p build/download-pdf-watermark
      
    - name: Copy plugin files
      run: |
        # Copier les fichiers principaux
        cp download-pdf-watermark.php build/download-pdf-watermark/
        cp README.md build/download-pdf-watermark/
        cp LICENSE build/download-pdf-watermark/
        cp composer.json build/download-pdf-watermark/
        
        # Copier les dossiers nécessaires
        cp -r admin build/download-pdf-watermark/
        cp -r assets build/download-pdf-watermark/
        cp -r includes build/download-pdf-watermark/
        cp -r public build/download-pdf-watermark/
        cp -r vendor build/download-pdf-watermark/
        
        # Supprimer les fichiers de développement du build
        find build/download-pdf-watermark -name ".DS_Store" -delete
        find build/download-pdf-watermark -name "*.log" -delete
        
    - name: Get plugin version
      id: get_version
      run: |
        VERSION=$(grep "Version:" download-pdf-watermark.php | sed 's/.*Version: *\([0-9.]*\).*/\1/')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Plugin version: $VERSION"
        
    - name: Create ZIP archive
      run: |
        cd build
        zip -r download-pdf-watermark-${{ steps.get_version.outputs.version }}.zip download-pdf-watermark/
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: download-pdf-watermark-${{ steps.get_version.outputs.version }}
        path: build/download-pdf-watermark-${{ steps.get_version.outputs.version }}.zip
        retention-days: 30
        
    - name: Create Release (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/download-pdf-watermark-${{ steps.get_version.outputs.version }}.zip
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}