name: Build and Release Plugin

on:
  push:
    tags:
      - 'v*'
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, intl, zip
        tools: composer:v2
        
    - name: Setup WP-CLI and gettext
      run: |
        # Installer gettext pour msgfmt (fallback)
        sudo apt-get update && sudo apt-get install -y gettext
        # Installer WP-CLI
        curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        chmod +x wp-cli.phar
        sudo mv wp-cli.phar /usr/local/bin/wp
        # Installer le package i18n pour WP-CLI
        wp package install wp-cli/i18n-command --allow-root
        
    - name: Validate composer.json and composer.lock
      run: composer validate --strict
      
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
          
    - name: Make build script executable
      run: chmod +x build-plugin.sh
      
    - name: Build plugin using build script
      run: ./build-plugin.sh --type ci --verbose
        
    - name: Get plugin version
      id: get_version
      run: |
        VERSION=$(grep "Version:" download-pdf-watermark.php | sed 's/.*Version: *\([0-9.]*\).*/\1/')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Plugin version: $VERSION"
        
    - name: Rename ZIP file for release
      run: |
        # Le script build-plugin.sh cr√©e un ZIP avec le nom ci, on le renomme pour la release
        if [ -f "build/download-pdf-watermark-ci.zip" ]; then
          mv build/download-pdf-watermark-ci.zip build/download-pdf-watermark-${{ steps.get_version.outputs.version }}.zip
        fi
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: download-pdf-watermark-${{ steps.get_version.outputs.version }}
        path: build/download-pdf-watermark-${{ steps.get_version.outputs.version }}.zip
        retention-days: 30
        
    - name: Create Release (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: build/download-pdf-watermark-${{ steps.get_version.outputs.version }}.zip
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}